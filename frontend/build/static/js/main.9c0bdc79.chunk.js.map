{"version":3,"sources":["component/Board/StatusCard.js","component/Board/StatusBoard.js","App.js","index.js"],"names":["StatusCard","props","Card","className","Body","Text","content","Button","onClick","delete","variant","btnStatus","boardStateHandler","StatusBoard","useState","projectData","setProjectData","contentArea","setContentArea","fetchCards","fetch","then","res","json","data","console","log","useEffect","onSubmit","event","a","preventDefault","axios","post","status","deleteCard","id","putCard","newCard","put","_id","projectFilterdWait","filter","project","projectFilterInPro","projectFilterFin","Form","Control","as","rows","name","placeholder","onChange","target","value","type","Container","Row","Col","sm","map","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c0bdc79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nfunction StatusCard(props) {\r\n  return (\r\n    <Card className=\"mb-4\">\r\n      <Card.Body>\r\n        <Card.Text className=\"cardText\">{props.content}</Card.Text>\r\n        <div className=\"center cardButton\">\r\n          <Button onClick={props.delete} variant=\"danger\">\r\n            Delete\r\n          </Button>\r\n          {!props.btnStatus ? (\r\n            <Button onClick={props.boardStateHandler}>Resolve</Button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default StatusCard;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { Container, Row, Col, Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nimport Card from \"./StatusCard\";\r\n\r\nfunction StatusBoard() {\r\n  const [projectData, setProjectData] = useState([]);\r\n  const [contentArea, setContentArea] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchCards();\r\n  }, []);\r\n\r\n  function fetchCards() {\r\n    fetch(\"http://localhost:4000/api/cards/\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        setProjectData(data);\r\n      });\r\n  }\r\n\r\n  const onSubmit = async event => {\r\n    console.log(\"clieckeado\");\r\n    event.preventDefault();\r\n    await axios.post(\"http://localhost:4000/api/cards/\", {\r\n      ...contentArea,\r\n      status: \"Waiting\"\r\n    });\r\n    fetchCards();\r\n    setContentArea({ content: \"\" });\r\n  };\r\n\r\n  const onChangeHandler = event => {\r\n    const { name, value } = event.target;\r\n    //setDBSent(true);\r\n    setContentArea({\r\n      ...contentArea,\r\n      [name]: value\r\n    });\r\n    console.log(contentArea);\r\n  };\r\n\r\n  const deleteCard = async id => {\r\n    await axios.delete(\"http://localhost:4000/api/cards/\" + id);\r\n    fetchCards();\r\n  };\r\n\r\n  const putCard = async data => {\r\n    console.log(data);\r\n    if (data.status === \"InProgress\") {\r\n      const newCard = {\r\n        content: data.content,\r\n        status: \"Finished\",\r\n        btnStatus: true\r\n      };\r\n      await axios.put(\"http://localhost:4000/api/cards/\" + data._id, newCard);\r\n      fetchCards();\r\n    } else {\r\n      const newCard = {\r\n        content: data.content,\r\n        status: \"InProgress\"\r\n      };\r\n      console.log(newCard);\r\n      await axios.put(\"http://localhost:4000/api/cards/\" + data._id, newCard);\r\n      fetchCards();\r\n    }\r\n  };\r\n\r\n  let projectFilterdWait = projectData.filter(\r\n    project => project.status === \"Waiting\"\r\n  );\r\n  let projectFilterInPro = projectData.filter(\r\n    project => project.status === \"InProgress\"\r\n  );\r\n  let projectFilterFin = projectData.filter(\r\n    project => project.status === \"Finished\"\r\n  );\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <Form onSubmit={onSubmit} className=\"contentForm\">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows=\"3\"\r\n            name=\"content\"\r\n            placeholder=\"content\"\r\n            onChange={onChangeHandler}\r\n            value={contentArea.content}\r\n          />\r\n          <Button type=\"submit\" className=\"ml-2\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n      <Container>\r\n        <Row>\r\n          <Col id=\"Waiting\" sm={4}>\r\n            <h3>Waiting</h3>\r\n            {projectFilterdWait.map(project => (\r\n              <Card\r\n                {...project}\r\n                key={project._id}\r\n                boardStateHandler={() => putCard(project)}\r\n                delete={() => deleteCard(project._id)}\r\n              />\r\n            ))}\r\n          </Col>\r\n          <Col id=\"InProgress\" sm={4}>\r\n            <h3>InProgress</h3>\r\n            {projectFilterInPro.map(project => (\r\n              <Card\r\n                {...project}\r\n                key={project._id}\r\n                boardStateHandler={() => putCard(project)}\r\n                delete={() => deleteCard(project._id)}\r\n              />\r\n            ))}\r\n          </Col>\r\n          <Col id=\"Finished\" sm={4}>\r\n            <h3>Finished</h3>\r\n            {projectFilterFin.map(project => (\r\n              <Card\r\n                {...project}\r\n                key={project._id}\r\n                boardStateHandler={() => putCard(project._id)}\r\n                delete={() => deleteCard(project._id)}\r\n              />\r\n            ))}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default StatusBoard;\r\n","import React from \"react\";\n//import React, { Fragment } from \"react\";\n//import Header from \"./component/Header\";\n//import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport StatusBoard from \"./component/Board/StatusBoard\";\n\nfunction App() {\n  return <StatusBoard />;\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n//import * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n//import AppBoard from \"./AppBoard\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}